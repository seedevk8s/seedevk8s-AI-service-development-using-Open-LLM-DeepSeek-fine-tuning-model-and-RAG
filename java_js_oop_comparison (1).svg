<svg viewBox="0 0 1400 1000" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="1400" height="1000" fill="#f8f9fa"/>
  
  <!-- Title -->
  <rect x="50" y="20" width="1300" height="60" fill="#2c3e50" rx="10"/>
  <text x="700" y="55" text-anchor="middle" fill="white" font-size="26" font-weight="bold">
    JavaScript 객체 체계 완전 정리 (취준생 필수!)
  </text>
  
  <!-- JavaScript Object Hierarchy -->
  <rect x="50" y="100" width="1300" height="80" fill="#34495e" rx="8"/>
  <text x="700" y="125" text-anchor="middle" fill="white" font-size="20" font-weight="bold">
    🏗️ JavaScript에서 모든 것은 객체다! (원시값 제외)
  </text>
  <text x="700" y="150" text-anchor="middle" fill="#ecf0f1" font-size="14">
    객체 = 키-값 쌍의 속성(property)과 메서드(method)를 가진 데이터 구조
  </text>
  <text x="700" y="165" text-anchor="middle" fill="#ecf0f1" font-size="14">
    인스턴스 = 생성자 함수나 클래스로부터 생성된 구체적인 객체 (JavaScript에서는 객체 ≈ 인스턴스)
  </text>
  
  <!-- 1. Built-in Objects -->
  <rect x="50" y="200" width="320" height="350" fill="#e8f5e8" stroke="#27ae60" stroke-width="3" rx="10"/>
  <rect x="60" y="210" width="300" height="40" fill="#27ae60" rx="5"/>
  <text x="210" y="235" text-anchor="middle" fill="white" font-size="16" font-weight="bold">
    1️⃣ 내장 객체 (Built-in Objects)
  </text>
  
  <text x="70" y="265" fill="#2c3e50" font-size="14" font-weight="bold">📚 Global Objects:</text>
  <text x="70" y="285" fill="#34495e" font-size="12">• Object, Array, Function, Date</text>
  <text x="70" y="300" fill="#34495e" font-size="12">• String, Number, Boolean, RegExp</text>
  <text x="70" y="315" fill="#34495e" font-size="12">• Math, JSON, Promise, Set, Map</text>
  
  <text x="70" y="340" fill="#2c3e50" font-size="14" font-weight="bold">💻 코드 예시:</text>
  <rect x="70" y="350" width="280" height="120" fill="#ffffff" stroke="#27ae60" rx="5"/>
  <text x="80" y="370" fill="#27ae60" font-size="11" font-family="monospace">// 내장 객체 사용</text>
  <text x="80" y="385" fill="#2c3e50" font-size="11" font-family="monospace">const arr = new Array(1,2,3);</text>
  <text x="80" y="400" fill="#2c3e50" font-size="11" font-family="monospace">const date = new Date();</text>
  <text x="80" y="415" fill="#2c3e50" font-size="11" font-family="monospace">const obj = new Object();</text>
  <text x="80" y="430" fill="#2c3e50" font-size="11" font-family="monospace">Math.max(1,2,3); // 정적 메서드</text>
  <text x="80" y="445" fill="#2c3e50" font-size="11" font-family="monospace">JSON.parse('{"a":1}');</text>
  <text x="80" y="460" fill="#e74c3c" font-size="11" font-family="monospace">// JS 엔진에 내장되어 있음</text>
  
  <text x="70" y="490" fill="#2c3e50" font-size="12" font-weight="bold">🔍 특징:</text>
  <text x="70" y="510" fill="#34495e" font-size="11">✓ JavaScript 엔진에 미리 정의됨</text>
  <text x="70" y="525" fill="#34495e" font-size="11">✓ 어디서든 사용 가능</text>
  <text x="70" y="540" fill="#34495e" font-size="11">✓ ECMAScript 표준에 정의</text>
  
  <!-- 2. DOM Objects -->
  <rect x="390" y="200" width="320" height="350" fill="#e3f2fd" stroke="#2196f3" stroke-width="3" rx="10"/>
  <rect x="400" y="210" width="300" height="40" fill="#2196f3" rx="5"/>
  <text x="550" y="235" text-anchor="middle" fill="white" font-size="16" font-weight="bold">
    2️⃣ 문서 객체 모델 (DOM)
  </text>
  
  <text x="410" y="265" fill="#2c3e50" font-size="14" font-weight="bold">🌐 HTML 요소들:</text>
  <text x="410" y="285" fill="#34495e" font-size="12">• document, element, node</text>
  <text x="410" y="300" fill="#34495e" font-size="12">• HTMLElement, Text, Comment</text>
  <text x="410" y="315" fill="#34495e" font-size="12">• Event, EventTarget</text>
  
  <text x="410" y="340" fill="#2c3e50" font-size="14" font-weight="bold">💻 코드 예시:</text>
  <rect x="410" y="350" width="280" height="120" fill="#ffffff" stroke="#2196f3" rx="5"/>
  <text x="420" y="370" fill="#2196f3" font-size="11" font-family="monospace">// DOM 객체 조작</text>
  <text x="420" y="385" fill="#2c3e50" font-size="11" font-family="monospace">const div = document.createElement('div');</text>
  <text x="420" y="400" fill="#2c3e50" font-size="11" font-family="monospace">div.innerHTML = 'Hello';</text>
  <text x="420" y="415" fill="#2c3e50" font-size="11" font-family="monospace">document.body.appendChild(div);</text>
  <text x="420" y="430" fill="#2c3e50" font-size="11" font-family="monospace">div.addEventListener('click', fn);</text>
  <text x="420" y="445" fill="#2c3e50" font-size="11" font-family="monospace">document.getElementById('myId');</text>
  <text x="420" y="460" fill="#e74c3c" font-size="11" font-family="monospace">// 브라우저가 HTML을 파싱해서 생성</text>
  
  <text x="410" y="490" fill="#2c3e50" font-size="12" font-weight="bold">🔍 특징:</text>
  <text x="410" y="510" fill="#34495e" font-size="11">✓ HTML 문서 구조를 객체로 표현</text>
  <text x="410" y="525" fill="#34495e" font-size="11">✓ 브라우저에서만 존재</text>
  <text x="410" y="540" fill="#34495e" font-size="11">✓ 트리 구조로 구성</text>
  
  <!-- 3. BOM Objects -->
  <rect x="730" y="200" width="320" height="350" fill="#fff3e0" stroke="#ff9800" stroke-width="3" rx="10"/>
  <rect x="740" y="210" width="300" height="40" fill="#ff9800" rx="5"/>
  <text x="890" y="235" text-anchor="middle" fill="white" font-size="16" font-weight="bold">
    3️⃣ 브라우저 객체 모델 (BOM)
  </text>
  
  <text x="750" y="265" fill="#2c3e50" font-size="14" font-weight="bold">🌍 브라우저 기능들:</text>
  <text x="750" y="285" fill="#34495e" font-size="12">• window, navigator, screen</text>
  <text x="750" y="300" fill="#34495e" font-size="12">• location, history</text>
  <text x="750" y="315" fill="#34495e" font-size="12">• console, localStorage, sessionStorage</text>
  
  <text x="750" y="340" fill="#2c3e50" font-size="14" font-weight="bold">💻 코드 예시:</text>
  <rect x="750" y="350" width="280" height="120" fill="#ffffff" stroke="#ff9800" rx="5"/>
  <text x="760" y="370" fill="#ff9800" font-size="11" font-family="monospace">// BOM 객체 사용</text>
  <text x="760" y="385" fill="#2c3e50" font-size="11" font-family="monospace">window.alert('알림!');</text>
  <text x="760" y="400" fill="#2c3e50" font-size="11" font-family="monospace">console.log('로그 출력');</text>
  <text x="760" y="415" fill="#2c3e50" font-size="11" font-family="monospace">location.href = 'https://...';</text>
  <text x="760" y="430" fill="#2c3e50" font-size="11" font-family="monospace">localStorage.setItem('key', 'value');</text>
  <text x="760" y="445" fill="#2c3e50" font-size="11" font-family="monospace">navigator.userAgent;</text>
  <text x="760" y="460" fill="#e74c3c" font-size="11" font-family="monospace">// 브라우저 환경에서 제공</text>
  
  <text x="750" y="490" fill="#2c3e50" font-size="12" font-weight="bold">🔍 특징:</text>
  <text x="750" y="510" fill="#34495e" font-size="11">✓ 브라우저 창과 관련된 객체들</text>
  <text x="750" y="525" fill="#34495e" font-size="11">✓ 표준화되지 않은 부분 많음</text>
  <text x="750" y="540" fill="#34495e" font-size="11">✓ 브라우저별로 차이 존재</text>
  
  <!-- 4. User-defined Objects -->
  <rect x="1070" y="200" width="280" height="350" fill="#fce4ec" stroke="#e91e63" stroke-width="3" rx="10"/>
  <rect x="1080" y="210" width="260" height="40" fill="#e91e63" rx="5"/>
  <text x="1210" y="235" text-anchor="middle" fill="white" font-size="16" font-weight="bold">
    4️⃣ 사용자 정의 객체
  </text>
  
  <text x="1090" y="265" fill="#2c3e50" font-size="14" font-weight="bold">👨‍💻 개발자가 만든 객체:</text>
  <text x="1090" y="285" fill="#34495e" font-size="12">• 객체 리터럴</text>
  <text x="1090" y="300" fill="#34495e" font-size="12">• 생성자 함수</text>
  <text x="1090" y="315" fill="#34495e" font-size="12">• ES6 클래스</text>
  
  <text x="1090" y="340" fill="#2c3e50" font-size="14" font-weight="bold">💻 코드 예시:</text>
  <rect x="1090" y="350" width="240" height="140" fill="#ffffff" stroke="#e91e63" rx="5"/>
  <text x="1100" y="370" fill="#e91e63" font-size="11" font-family="monospace">// 객체 리터럴</text>
  <text x="1100" y="385" fill="#2c3e50" font-size="10" font-family="monospace">const user = {name: 'John'};</text>
  <text x="1100" y="400" fill="#e91e63" font-size="11" font-family="monospace">// 생성자 함수</text>
  <text x="1100" y="415" fill="#2c3e50" font-size="10" font-family="monospace">function Person(name) {</text>
  <text x="1100" y="430" fill="#2c3e50" font-size="10" font-family="monospace">  this.name = name;</text>
  <text x="1100" y="445" fill="#2c3e50" font-size="10" font-family="monospace">}</text>
  <text x="1100" y="460" fill="#e91e63" font-size="11" font-family="monospace">// ES6 클래스</text>
  <text x="1100" y="475" fill="#2c3e50" font-size="10" font-family="monospace">class Car { }</text>
  
  <text x="1090" y="510" fill="#2c3e50" font-size="12" font-weight="bold">🔍 특징:</text>
  <text x="1090" y="530" fill="#34495e" font-size="11">✓ 개발자가 직접 정의</text>
  <text x="1090" y="545" fill="#34495e" font-size="11">✓ 비즈니스 로직 구현</text>
  
  <!-- Object vs Instance Section -->
  <rect x="50" y="570" width="1300" height="140" fill="#f8f9fa" stroke="#6c757d" stroke-width="2" rx="10"/>
  <rect x="60" y="580" width="1280" height="30" fill="#6c757d" rx="5"/>
  <text x="700" y="600" text-anchor="middle" fill="white" font-size="16" font-weight="bold">
    🤔 객체 vs 인스턴스: JavaScript에서는 어떻게 다른가?
  </text>
  
  <rect x="80" y="620" width="580" height="80" fill="#e8f5e8" stroke="#27ae60" rx="5"/>
  <text x="90" y="640" fill="#27ae60" font-size="14" font-weight="bold">📝 객체 (Object)</text>
  <text x="90" y="655" fill="#2c3e50" font-size="12">• 키-값 쌍을 가진 데이터 구조</text>
  <text x="90" y="670" fill="#2c3e50" font-size="12">• const obj = { name: 'John' }; // 객체 리터럴</text>
  <text x="90" y="685" fill="#2c3e50" font-size="12">• 포괄적인 개념</text>
  
  <rect x="680" y="620" width="580" height="80" fill="#e3f2fd" stroke="#2196f3" rx="5"/>
  <text x="690" y="640" fill="#2196f3" font-size="14" font-weight="bold">🏗️ 인스턴스 (Instance)</text>
  <text x="690" y="655" fill="#2c3e50" font-size="12">• 생성자/클래스로부터 만들어진 객체</text>
  <text x="690" y="670" fill="#2c3e50" font-size="12">• const person = new Person(); // 인스턴스</text>
  <text x="690" y="685" fill="#2c3e50" font-size="12">• 구체적인 개념</text>
  
  <!-- Interview Tips -->
  <rect x="50" y="730" width="1300" height="180" fill="#2c3e50" rx="10"/>
  <text x="70" y="755" fill="white" font-size="18" font-weight="bold">🔥 면접 필수 포인트</text>
  
  <rect x="70" y="770" width="300" height="130" fill="#34495e" rx="5"/>
  <text x="80" y="790" fill="#f39c12" font-size="14" font-weight="bold">Q1: DOM과 BOM 차이는?</text>
  <text x="80" y="810" fill="#ecf0f1" font-size="12">A: DOM은 HTML 문서 구조,</text>
  <text x="80" y="825" fill="#ecf0f1" font-size="12">BOM은 브라우저 창 관련 객체</text>
  <text x="80" y="845" fill="#f39c12" font-size="14" font-weight="bold">Q2: 내장객체 예시 5개는?</text>
  <text x="80" y="865" fill="#ecf0f1" font-size="12">A: Array, Object, Date,</text>
  <text x="80" y="880" fill="#ecf0f1" font-size="12">Math, JSON</text>
  
  <rect x="390" y="770" width="300" height="130" fill="#34495e" rx="5"/>
  <text x="400" y="790" fill="#f39c12" font-size="14" font-weight="bold">Q3: 객체 생성 방법 3가지는?</text>
  <text x="400" y="810" fill="#ecf0f1" font-size="12">A: 1) 객체 리터럴 { }</text>
  <text x="400" y="825" fill="#ecf0f1" font-size="12">2) 생성자 함수 new Person()</text>
  <text x="400" y="840" fill="#ecf0f1" font-size="12">3) ES6 클래스 class Person</text>
  <text x="400" y="860" fill="#f39c12" font-size="14" font-weight="bold">Q4: prototype이란?</text>
  <text x="400" y="880" fill="#ecf0f1" font-size="12">A: 객체들이 공유하는 속성/메서드</text>
  
  <rect x="710" y="770" width="300" height="130" fill="#34495e" rx="5"/>
  <text x="720" y="790" fill="#f39c12" font-size="14" font-weight="bold">Q5: this란 무엇인가?</text>
  <text x="720" y="810" fill="#ecf0f1" font-size="12">A: 함수 호출 시점의</text>
  <text x="720" y="825" fill="#ecf0f1" font-size="12">실행 컨텍스트 객체</text>
  <text x="720" y="845" fill="#f39c12" font-size="14" font-weight="bold">Q6: 호이스팅이란?</text>
  <text x="720" y="865" fill="#ecf0f1" font-size="12">A: 변수/함수 선언이</text>
  <text x="720" y="880" fill="#ecf0f1" font-size="12">스코프 최상단으로 끌어올려짐</text>
  
  <rect x="1030" y="770" width="300" height="130" fill="#34495e" rx="5"/>
  <text x="1040" y="790" fill="#f39c12" font-size="14" font-weight="bold">💡 실무 꿀팁</text>
  <text x="1040" y="810" fill="#ecf0f1" font-size="12">• window는 전역 객체</text>
  <text x="1040" y="825" fill="#ecf0f1" font-size="12">• document는 DOM 진입점</text>
  <text x="1040" y="840" fill="#ecf0f1" font-size="12">• console은 BOM 객체</text>
  <text x="1040" y="855" fill="#ecf0f1" font-size="12">• 모든 함수는 객체다!</text>
  <text x="1040" y="870" fill="#ecf0f1" font-size="12">• null의 typeof는 'object'</text>
  <text x="1040" y="885" fill="#ecf0f1" font-size="12">  (JavaScript의 유명한 버그)</text>
  
  <!-- Connection Lines -->
  <defs>
    <marker id="arrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e"/>
    </marker>
  </defs>
  
  <!-- Arrows showing relationships -->
  <line x1="210" y1="550" x2="210" y2="620" stroke="#34495e" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="550" y1="550" x2="550" y2="620" stroke="#34495e" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="890" y1="550" x2="890" y2="620" stroke="#34495e" stroke-width="2" marker-end="url(#arrow)"/>
  <line x1="1210" y1="550" x2="950" y2="620" stroke="#34495e" stroke-width="2" marker-end="url(#arrow)"/>
</svg>